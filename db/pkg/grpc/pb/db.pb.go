// Code generated by protoc-gen-go. DO NOT EDIT.
// source: db/pkg/grpc/pb/db.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ConnectDBRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectDBRequest) Reset()         { *m = ConnectDBRequest{} }
func (m *ConnectDBRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectDBRequest) ProtoMessage()    {}
func (*ConnectDBRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4883b1b4a0482855, []int{0}
}

func (m *ConnectDBRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectDBRequest.Unmarshal(m, b)
}
func (m *ConnectDBRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectDBRequest.Marshal(b, m, deterministic)
}
func (m *ConnectDBRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectDBRequest.Merge(m, src)
}
func (m *ConnectDBRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectDBRequest.Size(m)
}
func (m *ConnectDBRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectDBRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectDBRequest proto.InternalMessageInfo

type ConnectDBReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectDBReply) Reset()         { *m = ConnectDBReply{} }
func (m *ConnectDBReply) String() string { return proto.CompactTextString(m) }
func (*ConnectDBReply) ProtoMessage()    {}
func (*ConnectDBReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4883b1b4a0482855, []int{1}
}

func (m *ConnectDBReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectDBReply.Unmarshal(m, b)
}
func (m *ConnectDBReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectDBReply.Marshal(b, m, deterministic)
}
func (m *ConnectDBReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectDBReply.Merge(m, src)
}
func (m *ConnectDBReply) XXX_Size() int {
	return xxx_messageInfo_ConnectDBReply.Size(m)
}
func (m *ConnectDBReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectDBReply.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectDBReply proto.InternalMessageInfo

type GetDBRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDBRequest) Reset()         { *m = GetDBRequest{} }
func (m *GetDBRequest) String() string { return proto.CompactTextString(m) }
func (*GetDBRequest) ProtoMessage()    {}
func (*GetDBRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4883b1b4a0482855, []int{2}
}

func (m *GetDBRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDBRequest.Unmarshal(m, b)
}
func (m *GetDBRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDBRequest.Marshal(b, m, deterministic)
}
func (m *GetDBRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDBRequest.Merge(m, src)
}
func (m *GetDBRequest) XXX_Size() int {
	return xxx_messageInfo_GetDBRequest.Size(m)
}
func (m *GetDBRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDBRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDBRequest proto.InternalMessageInfo

type GetDBReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDBReply) Reset()         { *m = GetDBReply{} }
func (m *GetDBReply) String() string { return proto.CompactTextString(m) }
func (*GetDBReply) ProtoMessage()    {}
func (*GetDBReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4883b1b4a0482855, []int{3}
}

func (m *GetDBReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDBReply.Unmarshal(m, b)
}
func (m *GetDBReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDBReply.Marshal(b, m, deterministic)
}
func (m *GetDBReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDBReply.Merge(m, src)
}
func (m *GetDBReply) XXX_Size() int {
	return xxx_messageInfo_GetDBReply.Size(m)
}
func (m *GetDBReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDBReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetDBReply proto.InternalMessageInfo

type InitRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitRequest) Reset()         { *m = InitRequest{} }
func (m *InitRequest) String() string { return proto.CompactTextString(m) }
func (*InitRequest) ProtoMessage()    {}
func (*InitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4883b1b4a0482855, []int{4}
}

func (m *InitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitRequest.Unmarshal(m, b)
}
func (m *InitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitRequest.Marshal(b, m, deterministic)
}
func (m *InitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitRequest.Merge(m, src)
}
func (m *InitRequest) XXX_Size() int {
	return xxx_messageInfo_InitRequest.Size(m)
}
func (m *InitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InitRequest proto.InternalMessageInfo

type InitReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitReply) Reset()         { *m = InitReply{} }
func (m *InitReply) String() string { return proto.CompactTextString(m) }
func (*InitReply) ProtoMessage()    {}
func (*InitReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4883b1b4a0482855, []int{5}
}

func (m *InitReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitReply.Unmarshal(m, b)
}
func (m *InitReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitReply.Marshal(b, m, deterministic)
}
func (m *InitReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitReply.Merge(m, src)
}
func (m *InitReply) XXX_Size() int {
	return xxx_messageInfo_InitReply.Size(m)
}
func (m *InitReply) XXX_DiscardUnknown() {
	xxx_messageInfo_InitReply.DiscardUnknown(m)
}

var xxx_messageInfo_InitReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ConnectDBRequest)(nil), "pb.ConnectDBRequest")
	proto.RegisterType((*ConnectDBReply)(nil), "pb.ConnectDBReply")
	proto.RegisterType((*GetDBRequest)(nil), "pb.GetDBRequest")
	proto.RegisterType((*GetDBReply)(nil), "pb.GetDBReply")
	proto.RegisterType((*InitRequest)(nil), "pb.InitRequest")
	proto.RegisterType((*InitReply)(nil), "pb.InitReply")
}

func init() { proto.RegisterFile("db/pkg/grpc/pb/db.proto", fileDescriptor_4883b1b4a0482855) }

var fileDescriptor_4883b1b4a0482855 = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4f, 0x49, 0xd2, 0x2f,
	0xc8, 0x4e, 0xd7, 0x4f, 0x2f, 0x2a, 0x48, 0xd6, 0x2f, 0x48, 0xd2, 0x4f, 0x49, 0xd2, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x12, 0xe2, 0x12, 0x70, 0xce, 0xcf, 0xcb, 0x4b,
	0x4d, 0x2e, 0x71, 0x71, 0x0a, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x51, 0x12, 0xe0, 0xe2, 0x43,
	0x12, 0x2b, 0xc8, 0xa9, 0x54, 0xe2, 0xe3, 0xe2, 0x71, 0x4f, 0x45, 0x52, 0xc1, 0xc3, 0xc5, 0x05,
	0xe5, 0x83, 0x64, 0x79, 0xb9, 0xb8, 0x3d, 0xf3, 0x32, 0x4b, 0x60, 0x92, 0xdc, 0x5c, 0x9c, 0x10,
	0x6e, 0x41, 0x4e, 0xa5, 0x51, 0x1f, 0x23, 0x17, 0x93, 0x4b, 0x92, 0x90, 0x29, 0x17, 0x27, 0xdc,
	0x48, 0x21, 0x11, 0xbd, 0x82, 0x24, 0x3d, 0x74, 0x5b, 0xa5, 0x84, 0xd0, 0x44, 0x0b, 0x72, 0x2a,
	0x85, 0x34, 0xb9, 0x58, 0xc1, 0xf6, 0x08, 0x09, 0x80, 0x24, 0x91, 0x9d, 0x20, 0xc5, 0x87, 0x24,
	0x02, 0x52, 0xaa, 0xc6, 0xc5, 0x02, 0xb2, 0x55, 0x88, 0x1f, 0x24, 0x8e, 0xe4, 0x1c, 0x29, 0x5e,
	0x84, 0x40, 0x41, 0x4e, 0x65, 0x12, 0x1b, 0xd8, 0xef, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x44, 0x21, 0x49, 0x62, 0x16, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DbClient is the client API for Db service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DbClient interface {
	ConnectDB(ctx context.Context, in *ConnectDBRequest, opts ...grpc.CallOption) (*ConnectDBReply, error)
	GetDB(ctx context.Context, in *GetDBRequest, opts ...grpc.CallOption) (*GetDBReply, error)
	Init(ctx context.Context, in *InitRequest, opts ...grpc.CallOption) (*InitReply, error)
}

type dbClient struct {
	cc *grpc.ClientConn
}

func NewDbClient(cc *grpc.ClientConn) DbClient {
	return &dbClient{cc}
}

func (c *dbClient) ConnectDB(ctx context.Context, in *ConnectDBRequest, opts ...grpc.CallOption) (*ConnectDBReply, error) {
	out := new(ConnectDBReply)
	err := c.cc.Invoke(ctx, "/pb.Db/ConnectDB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dbClient) GetDB(ctx context.Context, in *GetDBRequest, opts ...grpc.CallOption) (*GetDBReply, error) {
	out := new(GetDBReply)
	err := c.cc.Invoke(ctx, "/pb.Db/GetDB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dbClient) Init(ctx context.Context, in *InitRequest, opts ...grpc.CallOption) (*InitReply, error) {
	out := new(InitReply)
	err := c.cc.Invoke(ctx, "/pb.Db/Init", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DbServer is the server API for Db service.
type DbServer interface {
	ConnectDB(context.Context, *ConnectDBRequest) (*ConnectDBReply, error)
	GetDB(context.Context, *GetDBRequest) (*GetDBReply, error)
	Init(context.Context, *InitRequest) (*InitReply, error)
}

// UnimplementedDbServer can be embedded to have forward compatible implementations.
type UnimplementedDbServer struct {
}

func (*UnimplementedDbServer) ConnectDB(ctx context.Context, req *ConnectDBRequest) (*ConnectDBReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConnectDB not implemented")
}
func (*UnimplementedDbServer) GetDB(ctx context.Context, req *GetDBRequest) (*GetDBReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDB not implemented")
}
func (*UnimplementedDbServer) Init(ctx context.Context, req *InitRequest) (*InitReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Init not implemented")
}

func RegisterDbServer(s *grpc.Server, srv DbServer) {
	s.RegisterService(&_Db_serviceDesc, srv)
}

func _Db_ConnectDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectDBRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DbServer).ConnectDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Db/ConnectDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DbServer).ConnectDB(ctx, req.(*ConnectDBRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Db_GetDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDBRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DbServer).GetDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Db/GetDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DbServer).GetDB(ctx, req.(*GetDBRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Db_Init_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DbServer).Init(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Db/Init",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DbServer).Init(ctx, req.(*InitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Db_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Db",
	HandlerType: (*DbServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ConnectDB",
			Handler:    _Db_ConnectDB_Handler,
		},
		{
			MethodName: "GetDB",
			Handler:    _Db_GetDB_Handler,
		},
		{
			MethodName: "Init",
			Handler:    _Db_Init_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "db/pkg/grpc/pb/db.proto",
}
