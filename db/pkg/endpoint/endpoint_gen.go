// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	endpoint "github.com/go-kit/kit/endpoint"
	service "github.com/terasurfer/Cartelize-Server/db/pkg/service"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	ConnectDBEndpoint endpoint.Endpoint
	GetDBEndpoint     endpoint.Endpoint
	InitEndpoint      endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.DbService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		ConnectDBEndpoint: MakeConnectDBEndpoint(s),
		GetDBEndpoint:     MakeGetDBEndpoint(s),
		InitEndpoint:      MakeInitEndpoint(s),
	}
	for _, m := range mdw["ConnectDB"] {
		eps.ConnectDBEndpoint = m(eps.ConnectDBEndpoint)
	}
	for _, m := range mdw["GetDB"] {
		eps.GetDBEndpoint = m(eps.GetDBEndpoint)
	}
	for _, m := range mdw["Init"] {
		eps.InitEndpoint = m(eps.InitEndpoint)
	}
	return eps
}
